// En una empresa de logística de paquetes existe una sala de contenedores donde se preparan las entregas. 
// Cada contenedor puede almacenar un paquete y la sala cuenta con capacidad para N contenedores. Resuelva considerando las siguientes situaciones:

// a) La empresa cuenta con 2 empleados: un empleado Preparador que se ocupa de preparar los paquetes y dejarlos en los contenedores; 
// un empelado Entregador que se ocupa de tomar los paquetes de los contenedores y realizar la entregas. 
// Tanto el Preparador como el Entregador trabajan de a un paquete por vez.

// b) Modifique la solución a) para el caso en que haya P empleados Preparadores.

// c) Modifique la solución a) para el caso en que haya E empleados Entregadores.

// d) Modifique la solución a) para el caso en que haya P empleados Preparadores y E empleadores Entregadores.


a)
Paquete c[N]; // cola de contenedores, donde cada posición puede almacenar un paquete
sem vacio = 1; // indica si hay espacio en la cola
sem lleno = 0; // indica si hay paquetes en la cola

Process preparador {
    while (true){
        //preparar paquete;
        P(vacio);
        c.push(paquete);
        V(lleno);
    }
}

Process entregador {
    while (true){
        P(lleno);
        paquete = c.pop();
        V(vacio);
        //entregar paquete;
    }
}

b)
Paquete c[N];
sem vacio = N; // al tener P preparadores, el semáforo de vacíos debe iniciar en N para aprovechar toda la concurrencia?
sem lleno = 0;
sem mutexP = 1;

Process preparador[i:0..P-1] {
    while (true){
        //preparar paquete;
        P(vacio);
        P(mutexP);
        c.push(paquete);
        V(mutexP);
        V(lleno);
    }
}

Process entregador {
    while (true){
        P(lleno);
        paquete = c.pop();
        V(vacio);
        //entregar paquete;
    }
}

c)
Paquete c[N];
sem vacio = N; // al tener E entregadores, el semáforo de vacíos debe iniciar en N para aprovechar toda la concurrencia?
sem lleno = 0;
sem mutexE = 1;

Process preparador {
    while (true){
        //preparar paquete;
        P(vacio);
        c.push(paquete);
        V(lleno);
    }
}

Process entregador[i:0..E-1] {
    while (true){
        P(lleno);
        P(mutexE);
        paquete = c.pop();
        V(mutexE);
        V(vacio);
        //entregar paquete;
    }
}

d)
Paquete c[N];
sem vacio = N; // al tener P preparadores y E entregadores, el semáforo de vacíos debe iniciar en N para aprovechar toda la concurrencia?
sem lleno = 0;
sem mutexP = 1;
sem mutexE = 1;

Process preparador[i:0..P-1] {
    while (true){
        //preparar paquete;
        P(vacio);
        P(mutexP);
        c.push(paquete);
        V(mutexP);
        V(lleno);
    }
}

Process entregador[i:0..E-1] {
    while (true){
        P(lleno);
        P(mutexE);
        paquete = c.pop();
        V(mutexE);
        V(vacio);
        //entregar paquete;
    }
}